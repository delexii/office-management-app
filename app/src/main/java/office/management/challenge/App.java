/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package office.management.challenge;

import java.util.Collections;
import java.util.Enumeration;
import java.util.List;
import java.util.Scanner;

public class App {

    static Office office = new Office();
    static Integer userChoice;

    public MeetingRoom room;
    public static List<String> availableSpaces = office.getAvailableRooms();
    static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        String mainMenu = ("Select a choice from the menu: \n" + "1. Add a room\n" + "2. See all rooms\n"
                + "3. See available rooms\n" + "4. Enter a room\n" + "5. Leave a room\n"
                + "6. Check if room available\n" + "7. Exit\n");

        do {
            System.out.println(App.getGreeting());
            System.out.println(mainMenu);
            userChoice = scanner.nextInt();

            switch (userChoice) {
            case 1:
                App.displayAddRoomOption();
                break;
            case 2:
                if (office.spaces.isEmpty()) {
                    System.out.println("You have no spaces to see\n");
                } else {
                    App.displayAllRooms();
                }
                break;
            case 3:
                App.displayAvailableRooms();
                break;
            case 4:
                App.userEntersRoom();
                System.out.println("Booking successful!\n");
                break;
            case 5:
                App.userLeavesRoom();
                break;
            case 6:
                if (userChecksAvailability()) {
                    System.out.println("This room is available\n");
                } else {
                    System.out.println("This room is unavailable\n");
                }
                break;
            case 7:
                System.exit(0);
                break;
            }
        } while (userChoice != 0);
        scanner.close();
    }

    public static String getGreeting() {
        return "Welcome to your office management app!\n";
    }

    public static Character displayReturnPrompt() {
        System.out.println("Press x to return to the main menu:");
        return scanner.next().charAt(0);
    }

    public static Character displayAddRoomOption() {
        System.out.println("Enter a name for your room");
        String name = scanner.next();
        office.addRoom(new MeetingRoom(name));
        Character response = App.displayReturnPrompt();
        return response;
    }

    public static Character displayAllRooms() {
        Enumeration<MeetingRoom> e = Collections.enumeration(office.spaces);

        System.out.println("Your meeting rooms: ");
        while (e.hasMoreElements()) {
            MeetingRoom currentItem = e.nextElement();
            String line = String.format(" * %s", currentItem.name);
            System.out.println(line);
        }
        Character response = App.displayReturnPrompt();
        return response;
    }

    public static Character displayAvailableRooms() {
        Enumeration<String> e = Collections.enumeration(office.getAvailableRooms());

        System.out.println("Available rooms: ");
        while (e.hasMoreElements()) {
            String currentItem = e.nextElement();
            String line = String.format(" * %s", currentItem);
            System.out.println(line);
        }

        Character response = App.displayReturnPrompt();
        return response;
    }

    public static Boolean userChecksAvailability() {
        System.out.println("Enter a room name to check availability:");
        String room = scanner.next();
        // office.getAvailableRooms();
        if (office.getAvailableRooms().contains(room)) {
            return true;
        } else {
            return false;
        }
    }

    public static void userEntersRoom() {
        System.out.println("Enter a room name to book:");
        String room = scanner.next();
        for (MeetingRoom j : office.spaces) {
            // System.out.println(j.name == room);
            // System.out.println(room);

            if (room.equals(j.name)) {
                j.enterRoom();
            }
            // System.out.println(j.available);
            // System.out.println("Hello");
        }
        office.getAvailableRooms();
        // name.close();
    }

    public static void userLeavesRoom() {
        System.out.println("Enter a room name to book:");
        String room = scanner.next();
        for (MeetingRoom j : office.spaces) {
            if (room.equals(j.name)) {
                j.leaveRoom();
            }
        }
        office.getAvailableRooms();
    }
}
